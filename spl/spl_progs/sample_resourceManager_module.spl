alias functionNum R1;
alias currentPID R2;

//Acquire Terminal
if (functionNum == 8) then
	while([TERMINAL_STATUS_TABLE] == 1) do
		[PROCESS_TABLE + (currentPID * 16) + 4] = WAIT_TERMINAL;
		multipush(R1, R2, R3);
		call SCHEDULER;
		multipop(R1, R2, R3);
	endwhile;
	[TERMINAL_STATUS_TABLE] = 1;
	[TERMINAL_STATUS_TABLE + 1] = currentPID;
	return;
endif;

//Release Terminal
if (functionNum == 9) then
	if ([TERMINAL_STATUS_TABLE + 1] != currentPID) then
		alias retValue R0;
		retValue = -1;
		return;
	else
		[TERMINAL_STATUS_TABLE] = 0;
		alias PID R10;
		PID = 0;
		while (PID <= 15) do
			if ([PROCESS_TABLE + (PID*16) + 4] == WAIT_TERMINAL) then
				[PROCESS_TABLE + (PID*16) + 4] = READY;
			endif;
			PID = PID + 1;
		endwhile;
		alias retValue R0;
		retValue = 0;
		return;
	endif;
endif;
	
